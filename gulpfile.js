/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

var gulp = require('gulp');

//Include Plugins
var del = require('del');
var jshint = require('gulp-jshint');
var useref = require('gulp-useref');
var lazypipe = require('lazypipe');
var sass = require('gulp-sass');
var concat = require('gulp-concat');
var uglify = require('gulp-uglify');
var rename = require('gulp-rename');
var nano = require('gulp-cssnano');
var runSequence = require('gulp-run-sequence');
var sourcemaps = require('gulp-sourcemaps');
var clean = require('gulp-clean');
var notify = require('gulp-notify');//Ã· æ–≈œ¢
var gulpNgConfig = require('gulp-ng-config');//Ã· æ–≈œ¢
var tinylr = require('tiny-lr');
var fs = require('fs');
var path = require('path');
var server = tinylr();
var port = 8000;

var jsFilePath = [
  'app/scripts/*.js',
  'app/scripts/*/*.js',
  'app/app.js',
  'app/pages/**/*.js',
  'app/pages/**/**/*.js',
  'app/pages/**/**/**/*.js'];

var cssFilePath = [
  'app/theme/app.core.scss',
  'app/pages/**/*.scss',
  'app/pages/**/**/*.scss',
  'app/pages/**/**/**/*.scss'];

var htmlFilePath = [
  'app/pages/**/*.html',
  'app/pages/**/**/*.html',
  'app/pages/**/**/**/*.html',
  'app/pages/**/**/**/**/*.html'];

var libDevFilePath = [
  'app/lib/**/*.*',
  'app/lib/**/**/*.*',
  'app/lib/**/**/**/*.*'];

var libDevCommonFilePath = [
  'app/common/**/*.*',
  'app/common/**/**/*.*',
  'app/common/**/**/**/*.*'
];

var libPublishFilePath = [
  'app/lib/**/css/ionic.min.css',
  'app/lib/**/fonts/*.*',
  'app/lib/**/js/ionic.bundle.js',
  'app/lib/**/rollups/md5.js',
  'app/lib/**/dist/jquery.min.js',
  'app/lib/**/dist/ng-cordova.js',
  'app/lib/**/angular-translate.js',
  'app/lib/**/angular-translate-loader-static-files.js',
  'app/lib/**/dist/ionic-datepicker.bundle.min.js',
  'app/lib/**/dist/pouchdb.min.js'
];

var imgFilePath = [
  'app/img/**/*.png',
  'app/img/**/**/*.*',
  'app/img/**/**/**/*.png',
  'app/img/*.gif'];

var configDEVPath = [
  'publish/TEST/config.xml'];

var configPRODPath = [
  'publish/PROD/config.xml'];

var configiOSAppStorePath = [
  'publish/IOSAPPSTORE/config.xml'
]

var pluginDEVPath = [
  'publish/TEST/plugins/*.*',
  'publish/TEST/plugins/**/*.*',
  'publish/TEST/plugins/**/**/*.*',
  'publish/TEST/plugins/**/**/**/*.*',
  'publish/TEST/plugins/**/**/**/**/*.*',
  'publish/TEST/plugins/**/**/**/**/**/*.*'];
var pluginPRODPath = [
  'publish/PROD/plugins/*.*',
  'publish/PROD/plugins/**/*.*',
  'publish/PROD/plugins/**/**/*.*',
  'publish/PROD/plugins/**/**/**/*.*',
  'publish/PROD/plugins/**/**/**/**/*.*',
  'publish/PROD/plugins/**/**/**/**/**/*.*'];

<<<<<<< HEAD
//Ê∏ÖÈô§Ëá™Âä®ÁîüÊàêÁöÑÁõÆÂΩïÊñá‰ª∂
=======
//«Â≥˝◊‘∂Ø…˙≥…µƒƒø¬ºŒƒº˛
>>>>>>> f-9457
gulp.task('clean', function () {
  return gulp.src(['www/build/*', 'app/scripts/baseConfig.js', 'config.xml'
    /*,'plugins/com.handmobile.cordovaplugin.hotpatch/*', 'plugins/hand-im-plugin-device/*'*/]).pipe(clean());
});

gulp.task('clean-code', function () {
  return gulp.src(['www/build/css/*', 'www/build/img/*', 'www/build/pages/*', 'www/build/app.bundle.js']).pipe(clean());
});

gulp.task('clean-bundle-js', function () {
  return gulp.src(['www/build/app.bundle.js']).pipe(clean());
});


<<<<<<< HEAD
//Âä®ÊÄÅÈÖçÁΩÆandroid Âç≥Êó∂ÈÄöËÆØÁöÑ
=======
//∂ØÃ¨≈‰÷√android º¥ ±Õ®—∂µƒ
>>>>>>> f-9457
gulp.task('clean-android-im-config', function () {
  return gulp.src(['plugins/hand-im-plugin-device/plugin.xml']).pipe(clean());
});

gulp.task('copy-prod-android-im-config', function () {
  return gulp.src('publish/PROD/hand-im-plugin-device/plugin.xml')
    .pipe(gulp.dest('plugins/hand-im-plugin-device'));
});

gulp.task('config-prod-android-im-config', function (callback) {
  runSequence('clean-android-im-config', 'copy-prod-android-im-config', callback);
});


<<<<<<< HEAD
//ËØ≠Ê≥ïÊ£ÄÊü•
=======
//”Ô∑®ºÏ≤È
>>>>>>> f-9457
gulp.task('lint', function () {
  return gulp.src(jsFilePath)
    .pipe(jshint())
    .pipe(jshint.reporter('default'));
});

<<<<<<< HEAD
//Â§çÂà∂È°µÈù¢Âà∞ËøêË°åÁõÆÂΩï
=======
//∏¥÷∆“≥√ÊµΩ‘À––ƒø¬º
>>>>>>> f-9457
gulp.task('pagesHtml', function () {
  return gulp.src(htmlFilePath)
    .pipe(useref({noAssets: true}, lazypipe().pipe(sourcemaps.init, {loadMaps: true})))
    .pipe(sourcemaps.write('.'))
    .pipe(gulp.dest('www/build/pages'));
});

//
gulp.task('rootHtml', function () {
  return gulp.src('src/*.html')
    .pipe(useref({noAssets: true}, lazypipe().pipe(sourcemaps.init, {loadMaps: true})))
    .pipe(sourcemaps.write('.'))
    .pipe(gulp.dest('www'));
});

<<<<<<< HEAD
//Êñ∞Âª∫Â§çÂà∂È°µÈù¢‰ªªÂä°
gulp.task('html', [/*'rootHtml',*/ 'pagesHtml']);

//Â§çÂà∂ÂºÄÂèëÁéØÂ¢ÉÁöÑ‰æùËµñÂ∫ìÊñá‰ª∂
=======
//–¬Ω®∏¥÷∆“≥√Ê»ŒŒÒ
gulp.task('html', [/*'rootHtml',*/ 'pagesHtml']);

//∏¥÷∆ø™∑¢ª∑æ≥µƒ“¿¿µø‚Œƒº˛
>>>>>>> f-9457
gulp.task('copy-dev-libs', function () {
  return gulp.src(libDevFilePath)
    //.pipe(useref({noAssets: true}, lazypipe().pipe(sourcemaps.init, {loadMaps: true})))
    //.pipe(sourcemaps.write('.'))
    .pipe(gulp.dest('www/build/lib'));
});

<<<<<<< HEAD
//Â§çÂà∂ÂèëÂ∏ÉÁéØÂ¢ÉÁöÑ‰æùËµñÂ∫ìÊñá‰ª∂
=======
//∏¥÷∆∑¢≤ºª∑æ≥µƒ“¿¿µø‚Œƒº˛
>>>>>>> f-9457
gulp.task('copy-publish-libs', function () {
  return gulp.src(libPublishFilePath)
    //.pipe(useref({noAssets: true}, lazypipe().pipe(sourcemaps.init, {loadMaps: true})))
    //.pipe(sourcemaps.write('.'))
    .pipe(gulp.dest('www/build/lib'));
});

<<<<<<< HEAD
//Â§çÂà∂ÂõæÁâáÊñá‰ª∂
=======
//∏¥÷∆Õº∆¨Œƒº˛
>>>>>>> f-9457
gulp.task('copy-img', function () {
  return gulp.src(imgFilePath)
    .pipe(gulp.dest('www/build/img'));
});

<<<<<<< HEAD
//Â§çÂà∂ÂºÄÂèëÁéØÂ¢É config.xml
=======
//∏¥÷∆ø™∑¢ª∑æ≥ config.xml
>>>>>>> f-9457
gulp.task('copy-dev-config', function () {
  return gulp.src(configDEVPath)
    .pipe(gulp.dest(''));
});

<<<<<<< HEAD
//Â§çÂà∂ÂèëÂ∏ÉÁéØÂ¢É config.xml
=======
//∏¥÷∆∑¢≤ºª∑æ≥ config.xml
>>>>>>> f-9457
gulp.task('copy-prod-config', function () {
  return gulp.src(configPRODPath)
    .pipe(gulp.dest(''));
});

<<<<<<< HEAD
//Â§çÂà∂ÂèëÂ∏ÉÁéØÂ¢É config.xml
=======
//∏¥÷∆∑¢≤ºª∑æ≥ config.xml
>>>>>>> f-9457
gulp.task('copy-ios-appStore-config', function () {
  return gulp.src(configiOSAppStorePath)
    .pipe(gulp.dest(''));
});

/*
 gulp.task('copy-dev-plugin', function () {
 return gulp.src(pluginDEVPath)
 .pipe(gulp.dest('plugins'));
 });
 gulp.task('copy-prod-plugin', function () {
 return gulp.src(pluginPRODPath)
 .pipe(gulp.dest('plugins'));
 });
 */


gulp.task('copy-common-js-libs', function () {
  return gulp.src(libDevCommonFilePath)
    //.pipe(useref({noAssets: true}, lazypipe().pipe(sourcemaps.init, {loadMaps: true})))
    //.pipe(sourcemaps.write('.'))
    .pipe(gulp.dest('www/build/common'));
});

<<<<<<< HEAD
//ÂÆö‰πâÂºÄÂèëÁéØÂ¢ÉÁöÑ‰æùËµñÂ∫ìÊñá‰ª∂‰ªªÂä°
=======
//∂®“Âø™∑¢ª∑æ≥µƒ“¿¿µø‚Œƒº˛»ŒŒÒ
>>>>>>> f-9457
gulp.task('copy-dev-lib', function (callback) {
  runSequence('copy-dev-libs', 'copy-img', 'copy-common-js-libs', callback);
});

<<<<<<< HEAD
//ÂÆö‰πâÂèëÂ∏ÉÁéØÂ¢ÉÁöÑ‰æùËµñÂ∫ìÊñá‰ª∂‰ªªÂä°
=======
//∂®“Â∑¢≤ºª∑æ≥µƒ“¿¿µø‚Œƒº˛»ŒŒÒ
>>>>>>> f-9457
gulp.task('copy-publish-lib', function (callback) {
  runSequence('copy-publish-libs', 'copy-img', 'copy-common-js-libs', callback);
});

<<<<<<< HEAD
//ÂêàÂπ∂ÂéãÁº©cssÊñá‰ª∂
=======
//∫œ≤¢—πÀıcssŒƒº˛
>>>>>>> f-9457
gulp.task('sass', function () {
  return gulp.src(['app/theme/*.scss'])
    .pipe(sass())
    .pipe(gulp.dest('www/build/css'));
});


<<<<<<< HEAD
//ÁîüÊàêÂºÄÂèëÁéØÂ¢ÉÁéØÂ¢ÉÈÖçÁΩÆÊñá‰ª∂
=======
//…˙≥…ø™∑¢ª∑æ≥ª∑æ≥≈‰÷√Œƒº˛
>>>>>>> f-9457
gulp.task('config-dev', function () {
  gulp.src('app/config/devConfig.json')
    .pipe(gulpNgConfig('baseConfig'))
    .pipe(rename("baseConfig.js"))
    .pipe(gulp.dest('app/scripts'))
});

<<<<<<< HEAD
//ÁîüÊàêÂèëÂ∏ÉÁéØÂ¢ÉÁéØÂ¢ÉÈÖçÁΩÆÊñá‰ª∂
=======
//…˙≥…∑¢≤ºª∑æ≥ª∑æ≥≈‰÷√Œƒº˛
>>>>>>> f-9457
gulp.task('config-prod', function () {
  gulp.src('app/config/prodConfig.json')
    .pipe(gulpNgConfig('baseConfig'))
    .pipe(rename("baseConfig.js"))
    .pipe(gulp.dest('app/scripts'))
});

<<<<<<< HEAD
//ÁîüÊàêiOSÂïÜÂ∫óÂèëÂ∏ÉÁéØÂ¢ÉÁéØÂ¢ÉÈÖçÁΩÆÊñá‰ª∂
=======
//…˙≥…iOS…ÃµÍ∑¢≤ºª∑æ≥ª∑æ≥≈‰÷√Œƒº˛
>>>>>>> f-9457
gulp.task('config-ios-appStore-prod', function () {
  gulp.src('app/config/iOSAppStoreConfig.json')
    .pipe(gulpNgConfig('baseConfig'))
    .pipe(rename("baseConfig.js"))
    .pipe(gulp.dest('app/scripts'))
});

<<<<<<< HEAD
//ÁîüÊàêiOSÂèëÂ∏ÉÁéØÂ¢ÉÁéØÂ¢ÉÈÖçÁΩÆÊñá‰ª∂
=======
//…˙≥…iOS∑¢≤ºª∑æ≥ª∑æ≥≈‰÷√Œƒº˛
>>>>>>> f-9457
gulp.task('config-prod', function () {
  gulp.src('app/config/prodConfig.json')
    .pipe(gulpNgConfig('baseConfig'))
    .pipe(rename("baseConfig.js"))
    .pipe(gulp.dest('app/scripts'))
});

<<<<<<< HEAD
//Â§çÂà∂ÂºÄÂèëÁéØÂ¢É config.xml
=======
//∏¥÷∆ø™∑¢ª∑æ≥ config.xml
>>>>>>> f-9457
gulp.task('copy-iosAppStore-config', function () {
  return gulp.src(configIosAppStorePath)
    .pipe(gulp.dest(''));
});

<<<<<<< HEAD
//ÂéãÁº©css
=======
//—πÀıcss
>>>>>>> f-9457
gulp.task('css', function () {
  return gulp.src('src/css/**/*.css')
    .pipe(sourcemaps.init())
    .pipe(gulp.dest('www/css'))  // write source file for debug
    .pipe(nano({reduceIdents: false}))
    .pipe(rename({
      suffix: '.min'
    }))
    .pipe(sourcemaps.write('.', {includeContent: false, sourceRoot: '.'}))
    .pipe(gulp.dest('www/css'));
});

<<<<<<< HEAD
//ÂêàÂπ∂ÂéãÁº©‰∏ëÂåñJs
=======
//∫œ≤¢—πÀı≥ÛªØJs
>>>>>>> f-9457
gulp.task('scripts', function () {
  return gulp.src(jsFilePath)
    .pipe(concat('app.bundle.js'))
    .pipe(gulp.dest('www/build')) // write source file for debug
    .pipe(rename({suffix: '.min'}))   //rename—πÀı∫ÛµƒŒƒº˛√˚
    .pipe(uglify())    //—πÀı
    .pipe(gulp.dest('www/build'));  // ‰≥ˆ
});

//
gulp.task('copy-prod', function () {
  return gulp.src([
      'src/**/*',
      '!src/index.html',
      '!src/**/*.ts',
      '!src/**/*.less',
      '!src/**/*.sass',
      '!src/**/*.styl',
      '!src/css/*',
      '!src/**/*.md',
      '!src/scripts/*'])
    .pipe(gulp.dest('www'));
});

<<<<<<< HEAD
// ÂàõÂª∫Â§öÂ±ÇÁõÆÂΩï
=======
// ¥¥Ω®∂‡≤„ƒø¬º
>>>>>>> f-9457
function mkdirs(dirname, mode, callback) {
 // console.log(dirname+"abc1");
  fs.exists(dirname, function (exists) {
    if (exists) {
      callback();
    } else {
    // console.log(path.dirname(dirname)+"abc");
      mkdirs(path.dirname(dirname), mode, function () {
     fs.mkdir(dirname, mode, callback);
     });
    }
  });
}

<<<<<<< HEAD
//Êã∑Ë¥ùÊñá‰ª∂
function copyfile(oldPath, newPath) {
  //console.log('Â§çÂà∂' + oldPath + ' -> ' + newPath);
=======
//øΩ±¥Œƒº˛
function copyfile(oldPath, newPath) {
  //console.log('∏¥÷∆' + oldPath + ' -> ' + newPath);
>>>>>>> f-9457

  var stat = fs.lstatSync(oldPath);
  if (stat.isDirectory()) {
    console.log(oldPath + ' «ƒø¬º');
    return false;
  }

  var readStream = fs.createReadStream(oldPath);
  var writeStream = fs.createWriteStream(newPath);
  readStream.pipe(writeStream);
  readStream.on('end', function () {
    console.log('copy end');
  });
  readStream.on('error', function () {
    console.log('copy error');
  });
}


function copyPages(e) {
  var oldPath = e.path;
  /*
<<<<<<< HEAD
  mac ÈÉ®ÂàÜ
   console.log(oldPath+"Êóß");
   var newPath = oldPath.replace('/app/', '/www/build/');
   console.log(newPath+"Êñ∞");
   var newDirPathTemp = newPath.split("/");
  */
  console.log(oldPath+'Êóß');
  var newPath = oldPath.replace('\\app\\', '\\www\\build\\');
  console.log(newPath+'Êñ∞');
=======
  mac ≤ø∑÷
   console.log(oldPath+"æ…");
   var newPath = oldPath.replace('/app/', '/www/build/');
   console.log(newPath+"–¬");
   var newDirPathTemp = newPath.split("/");
  */
  console.log(oldPath+'æ…');
  var newPath = oldPath.replace('\\app\\', '\\www\\build\\');
  console.log(newPath+'–¬');
>>>>>>> f-9457
  var newDirPathTemp = newPath.split("\\");

  var currentPath = fs.realpathSync('.');

  var newDirPath = [];
  for (var i = 0; i < newDirPathTemp.length - 1; i++) {
    newDirPath[i] = newDirPathTemp[i];
  }
  newDirPath = newDirPath.join("\\");
<<<<<<< HEAD
  // ‰øÆÊîπÊàñÂ¢ûÂä†Êó∂
  if ('added' == e.type || 'changed' == e.type || 'renamed' == e.type) {

    // Âà§Êñ≠ÁõÆÂΩïÊòØÂê¶Â≠òÂú®Ôºå‰∏çÂ≠òÂú®ÂàôÂàõÂª∫
=======
  // –ﬁ∏ƒªÚ‘ˆº” ±
  if ('added' == e.type || 'changed' == e.type || 'renamed' == e.type) {

    // ≈–∂œƒø¬º «∑Ò¥Ê‘⁄£¨≤ª¥Ê‘⁄‘Ú¥¥Ω®
>>>>>>> f-9457
    fs.exists(newDirPath, function (exists) {
      if (exists) {
        console.log("Œƒº˛º–¥Ê‘⁄");
        copyfile(oldPath, newPath);
      } else {
<<<<<<< HEAD
        console.log("Êñá‰ª∂Â§π‰∏çÂ≠òÂú®ÔºåÂàôÂàõÂª∫ÁõÆÂΩï");

       mkdirs(newDirPath);

        //Âª∂Êó∂ÔºåÁ≠âÂæÖÁõÆÂΩïÂàõÂª∫ÂÆåÊàê
=======
        console.log("Œƒº˛º–≤ª¥Ê‘⁄£¨‘Ú¥¥Ω®ƒø¬º");

       mkdirs(newDirPath);

        //—” ±£¨µ»¥˝ƒø¬º¥¥Ω®ÕÍ≥…
>>>>>>> f-9457
        setTimeout(function () {
          copyfile(oldPath, newPath);
        }, 200);
      }
    });
  } else if ('deleted' == e.type) { //…æ≥˝
    fs.unlink(newPath, function (err) {
      console.log('…æ≥˝ newPath ' + newPath + err);
    });
  }
}

<<<<<<< HEAD
// ÁõëÂê¨‰ªªÂä° ËøêË°åËØ≠Âè• gulp watch
=======
// º‡Ã˝»ŒŒÒ ‘À––”Ôæ‰ gulp watch
>>>>>>> f-9457
gulp.task('watch', function () {
  server.listen(port, function (err) {
    if (err) {
      return console.log(err);
    }

<<<<<<< HEAD
    //Êã∑Ë¥ù‰øÆÊîπËøáÁöÑÊñá‰ª∂
=======
    //øΩ±¥–ﬁ∏ƒπ˝µƒŒƒº˛
>>>>>>> f-9457
    gulp.watch(htmlFilePath, function (e) {
      console.log('”–±‰∂ØµƒŒƒº˛Œ™ oldPath ' + e.path);
      copyPages(e);
    });

    gulp.watch('app/img/**/**/**/**', function (e) {
      console.log('”–±‰∂ØµƒŒƒº˛Œ™ oldPath ' + e.path);
      copyPages(e);
    });

<<<<<<< HEAD
    // ÁõëÂê¨sass
=======
    // º‡Ã˝sass
>>>>>>> f-9457
    gulp.watch(cssFilePath, function (e) {
      console.log('”–±‰∂ØµƒŒƒº˛Œ™ oldPath ' + e.path);
      gulp.run('sass');
    });

<<<<<<< HEAD
    // ÁõëÂê¨js
=======
    // º‡Ã˝js
>>>>>>> f-9457
    gulp.watch(jsFilePath, function (e) {
      console.log('”–±‰∂ØµƒŒƒº˛Œ™ oldPath ' + e.path);
      gulp.run('scripts');
    });
  });

});

<<<<<<< HEAD
//ÊâãÂä®Êõ¥Êñ∞www/build‰ª£Á†Å
=======
// ÷∂Ø∏¸–¬www/build¥˙¬Î
>>>>>>> f-9457
gulp.task('rebuild', function (callback) {
  runSequence('clean-code', ['copy-img', 'sass', 'scripts', 'html'], callback);
});

<<<<<<< HEAD
//ÁîüÊàêÂºÄÂèëÁéØÂ¢É‰ª£Á†ÅÁõÆÂΩï
=======
//…˙≥…ø™∑¢ª∑æ≥¥˙¬Îƒø¬º
>>>>>>> f-9457
gulp.task('run-dev', function (callback) {
  runSequence('clean', 'config-dev', /*'lint',*/ 'copy-dev-config', 'copy-publish-lib', ['sass', 'scripts', 'html'], callback);
});

<<<<<<< HEAD
//ÁîüÊàêÂèëÂ∏ÉÁéØÂ¢É‰ª£Á†ÅÁõÆÂΩï
=======
//…˙≥…∑¢≤ºª∑æ≥¥˙¬Îƒø¬º
>>>>>>> f-9457
gulp.task('run-prod', function (callback) {
  runSequence('clean', 'config-prod', /*'lint',*/ 'copy-prod-config', 'copy-publish-lib', ['sass', 'scripts', 'html'], callback);
});

<<<<<<< HEAD
//ÁîüÊàêÂèëÂ∏ÉÁéØÂ¢É‰ª£Á†ÅÁõÆÂΩï
=======
//…˙≥…∑¢≤ºª∑æ≥¥˙¬Îƒø¬º
>>>>>>> f-9457
gulp.task('run-ios-prod', function (callback) {
  runSequence('clean', 'config-ios-appStore-prod', /*'lint',*/ 'copy-ios-appStore-config', 'copy-publish-lib', ['sass', 'scripts', 'html'], callback);
});


<<<<<<< HEAD
//ÈªòËÆ§‰ªªÂä°
=======
//ƒ¨»œ»ŒŒÒ
>>>>>>> f-9457
gulp.task('default', ['run-dev']);
